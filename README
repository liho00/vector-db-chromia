Install CHR CLI
https://docs.chromia.com/intro/getting-started/installation/cli-installation

Install PMC CLI
https://docs.chromia.com/providers/pmc/pmccli-installation

https://docs.chromia.com/providers/nodes/provider-keypair
pmc keygen --save .chromia/config will create a config file in working directory
.chromia/config
#Keypair generated using secp256k1
#Mon Mar 31 11:05:29 UTC 2025
privkey=******
pubkey=******
api.url=http://127.0.0.1:7740
brid=1E24A0CE172597A714B644251912996C1016E805AE89671D2E9C6CF2B037711F

https://gitlab.com/chromaway/core/vector-db-extension

Run the docker
docker run --rm -it -p 7740:7740 registry.gitlab.com/chromaway/example-projects/directory1-example/managed-single:latest

In the docker log retrieve privkey, pubkey, and replace in .chromia/config

```
# Build the demo dapp
cd vector-db-extension/rell
chr build

# Add the demo dapp
pmc blockchain add -bc vector-db-extension/rell/build/vector_example.xml -c dapp -n vector_blockchain

# Get the blockchain rid - can be found manually from "pmc blockchains"
vector_brid=$(pmc blockchains | jq -r '.[] | select(.Name == "vector_blockchain") | .Rid')
```

# Feedbacks
Feedback on Using Chromia Vector DB and Pinecone

Below is a summary of my observations regarding the use of Chromia Vector DB and Pinecone:

Pinecone

Got a solid ecosystem—can create custom indexes and namespaces.

UI is very user-friendly, making it easy to manage.

API key integration with the SDK works seamlessly, making vector DB usage quite smooth.

Chromia Vector DB

Need to create a new contract for each vector DB, corresponding to Pinecone’s index dimensions.

Seems like it doesn’t support namespaces (need to confirm).

All values passed through Postchain SDK must be in string format, whereas Pinecone allows custom datatypes in an array.

Overall, Pinecone feels more flexible, but Chromia has its own way of handling things. Let me know if need to check further!

